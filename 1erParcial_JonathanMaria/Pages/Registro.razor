@page "/"
@using _1erParcial_JonathanMaria.Controllers;
@using _1erParcial_JonathanMaria.Models;

<div class="container text-center">
    <EditForm Model="Inscripcion" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />

        <h1>Registro de Inscripciones</h1>

        <div class="form-group">
            <div class="form-inline">
                <label for="InscripcionId">Codigo de la Inscripcion</label>
                <InputNumber @bind-Value="Inscripcion.InscripcionId" class="form-control" />
                <button type="button" class="btn btn-outline-dark" @onclick="Buscar">Buscar</button>
            </div>
        </div>

        <div class="form-group">
            <div class="form-inline">
                <label for="Semestre">Semestre</label>
                <InputText @bind-Value="Inscripcion.Semestre" class="form-control" />
                <ValidationMessage For="@(() => Inscripcion.Semestre)" />
            </div>
        </div>

        <div class="form-group">
            <div class="form-inline">
                <label for="Limite">Limite de creditos</label>
                <InputNumber @bind-Value="Inscripcion.Limite" class="form-control" @onfocusin="Calcular" @onfocusout="Calcular" @oninput="Calcular"/>
                <ValidationMessage For="@(() => Inscripcion.Limite)" />
            </div>
        </div>

        <div class="form-group">
            <div class="form-inline">
                <label for="Tomados">Creditos tomados</label>
                <InputNumber @bind-Value="Inscripcion.Tomados" class="form-control"  @onfocusin="Calcular" @onfocusout="Calcular" @oninput="Calcular"/>
                <ValidationMessage For="@(() => Inscripcion.Tomados)" />
            </div>
        </div>

        <div class="form-group">
            <div class="form-inline">
                <label for="Disponibles">Creditos disponibles</label>
                <InputNumber @bind-Value="Inscripcion.Disponibles" class="form-control" disabled />
                <ValidationMessage For="@(() => Inscripcion.Disponibles)" />
            </div>
        </div>
            
        <h3>@Mensaje</h3>

        <div>
            <button type="button" class="btn btn-outline-primary" @onclick="Limpiar">Limpiar</button>
            <button type="submit" class="btn btn-outline-success">Guardar</button>
            <button type="button" class="btn btn-outline-danger" @onclick="Eliminar">Eliminar</button>
        </div>
        <ValidationSummary />
    </EditForm>
</div>

@code{
    Inscripciones Inscripcion = new Inscripciones();
    string Mensaje = string.Empty;

    private void Guardar()
    {

        InscripcionesController inscripcionesController = new InscripcionesController();

        try
        {
            if(inscripcionesController.Insertar(Inscripcion))
            {

                Mensaje = "La inscripcion se guardo de manera exitosa!...";
            }
            else
            {

                Mensaje = "La inscripcion no se guardo de manera exitosa!...";
            }
        }
        catch(Exception)
        {

            throw;
        }

    }

    private void Buscar()
    {

        InscripcionesController inscripcionesController = new InscripcionesController();

        try
        {
            Inscripciones InscripcionTemporal = new Inscripciones();
            InscripcionTemporal = inscripcionesController.Buscar(Inscripcion.InscripcionId);

            if(InscripcionTemporal != null)
            {
                Inscripcion = InscripcionTemporal;
                Mensaje = "Inscripcion encontrada de manera exitosa!...";
            }
            else
            {

                Mensaje = "La inscripcion no pudo ser encontrada!...";
            }
        }
        catch(Exception)
        {

            throw;
        }

    }

    private void Eliminar()
    {

        InscripcionesController inscripcionesController = new InscripcionesController();

        try
        {
            Inscripciones InscripcionTemporal = new Inscripciones();
            InscripcionTemporal = inscripcionesController.Buscar(Inscripcion.InscripcionId);

            if(InscripcionTemporal == null)
            {

                Mensaje = "No se puede eliminar una inscripcion que no existe!...";
            }
            else
            {

                if (inscripcionesController.Eliminar(Inscripcion.InscripcionId))
                {
                    Mensaje = "La inscripcion fue eliminada de manera exitosa";
                }
                else
                {

                    Mensaje = "La inscripcion no pudo ser eliminada de manera exitosa";
                }
            }
        }
        catch(Exception)
        {

            throw;
        }

    }

    private void Limpiar()
    {

        Inscripcion = new Inscripciones();
        Mensaje = string.Empty;
    }

    private void Calcular()
    {
        Inscripcion.Disponibles = Inscripcion.Limite - Inscripcion.Tomados;
    }

}